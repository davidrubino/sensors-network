using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AppliClient
{
    public class SensorData
    {
        /**
         * This set of data will be created by the user when he defines the sensor in the interface
        */
        public string Name
        {
            get;
            set;
        }

        public Communication.sensor_type Type
        {
            get;
            set;
        }

        public string Address
        {
            get;
            private set;
        }

        public decimal Threshold
        {
            get;
            set;
        }

<<<<<<< Updated upstream
        public Communication.threshold_type ThresholdType
        {
            get;
            set;
=======
        public string MinMax
        {
            get;
            set;
        }

        public bool IsActuator
        {
            get
            {
                switch (Type)
                {
                    case Communication.sensor_type.LED_ACTUATOR:
                        return true;
                    default:
                        return false;
                }
            }
>>>>>>> Stashed changes
        }

        /*
         * This variable is used only when the sensor is a contactor;
         * otherwise set to false
        */
        public Boolean BoolThreshold
        {
            get;
            set;
        }

        /*
         * These variables are the one displayed on the interface
        */
        private string value;
        private int batteryLife;
        private int wirelessSignal;
        private string lastActivityState;

        /*
         * This constructor is called when the user creates a TemperatureSensor or a LightSensor
        */
        public SensorData(string name, string address, Communication.sensor_type type, decimal threshold, Communication.threshold_type thresholdType)
        {
<<<<<<< Updated upstream
            this.name = name;
            this.address = address;
            this.type = type;
            this.threshold = threshold;
            this.ThresholdType = thresholdType;
=======
            this.Name = name;
            this.Address = address;
            this.Type = type;
            this.Threshold = threshold;
            this.MinMax = minMax;
>>>>>>> Stashed changes
            this.value = "NULL";
            this.batteryLife = 100;
            this.wirelessSignal = -1;
            this.lastActivityState = "NONE";
        }

        /*
         * This constructor is called when the user creates a Contactor
        */
        public SensorData(string name, string address, Communication.sensor_type type, Boolean threshold, Communication.threshold_type thresholdType)
        {
<<<<<<< Updated upstream
            this.name = name;
            this.address = address;
            this.type = type;
            this.boolThreshold = threshold;
            this.ThresholdType = thresholdType;
=======
            this.Name = name;
            this.Address = address;
            this.Type = type;
            this.BoolThreshold = threshold;
>>>>>>> Stashed changes
            this.value = "NULL";
            this.batteryLife = 100;
            this.wirelessSignal = -1;
            this.lastActivityState = "NONE";
        }

        /*
         * This constructor is called when the user creates an Actuator
        */
        public SensorData(string name, string address, Communication.sensor_type type)
        {
            this.Name = name;
            this.Address = address;
            this.Type = type;
        }
<<<<<<< Updated upstream
=======

        public String PrintSensorValues()
        {
            return "Nom: " + this.Name
                + " | Adresse: " + this.Address
                + " | Type: " + this.Type
                + " | Seuil: " + this.Threshold
                + " | Min/Max: " + this.MinMax;
        }

        public String PrintContactorValues()
        {
            return "Nom: " + this.Name
                + " | Adresse: " + this.Address
                + " | Type: " + this.Type
                + " | Seuil: " + this.BoolThreshold;
        }
>>>>>>> Stashed changes
    }
}
